/*
		Программа формирует на основе входного файла отчёт "Краткая спецификация".
		Отчёт представляет из себя перечень изделий, разбитый на разделы:
	- сборочные единицы;
	- детали;
	- покупные изделия;
	- стандартные изделия;
	- прочие изделия.
		Входной файл содержит данные об изделиях, содержащихся в структуре головного изделия, в виде общего перечня в формате XML с кодировкой Windows-1251.
		Каждое описываемое изделие имеет фиксированный набор атрибутов.
		Структура входного файта:
	<parts_list ...>
		<part .../>
		<part .../>
		...
		<part .../>
	</parts_list>
		"parts_list" - группирующий элемент перечня изделий. Содержит единственный атрибут "root_uid" - уникальный идентификатор головного изделия в структуре.
		"part" - элемент, описывающий изделие.
		Атрибуты:
	uid - внутренний уникальный идентификатор изделия;
	item_id - обозначение;
	rev_id - ревизия;
	type - тип изделия;
	name - наименование;
	desc - описание.
		Отчёт формируется в виде нескольких файлов формата txt, соответствующих разделам. Данные в файле представляют из себя текстовую таблицу со знаком табуляции
	в качестве разделителя. Для каждого из файлов имя соответствует формату: <обозначение головного изделия> - <имя раздела>.txt. Перечень изделий в каждом разделе
	отсортирован по атрибуту "обозначение", даже если этот атрибут не выводится.
		Раздел "Сборочные единицы": обозначение | наименование | ревизия. В раздел попадают данные изделий типов «I8_Assy», «sdb_AssyItem», «AS2_assembly».
		Раздел "Детали": обозначение | наименование | ревизия. В раздел попадают данные изделий типов «I8_Part», «sbd_DetailItem», «AS2_Detail».
		Раздел "Покупные изделия": обозначение | наименование. В раздел попадают данные изделий типов «I8_PKI», «I8_PKI_draft», «sdb_PKI», «AS2_PKI».
		Раздел "Стандартные изделия": обозначение. В раздел попадают данные изделий типов «I8_Sti», «sdb_Fast», «sdb_Standard», «AS2_STI».
		Раздел "Прочие изделия": обозначение | тип | наименование | ревизия | описание. В раздел попадают данные всех прочих типов изделий, не упомянутых выше.

		В файлах report_gui.h и report_gui.cpp определён класс report_GUI, содержащий графический интерфейс программы.
		В файлах class_part.h и class_part.cpp определён класс part, содержащий атрибуты детали, методы для работы с ним, а также функция для разбора входного XML-файла
	и функция для создания отчётов в формате txt.
		В файлах reports_generator.h и reports_generator.cpp определён класс reports_generator, служащий для связи графического пользовательского интерфейса с остальной
	частью программы и непосредственно генерирующий отчёты на основе входного файла.
		В файле resources.qrc содержится логотип компании.
*/


#include <QApplication>
#include "report_gui.h"		// Класс графического интерфейса.

int main(int argc, char * argv[])
{
	QApplication report(argc, argv);

	report_GUI * rg = new report_GUI;
	rg->setWindowIcon(QIcon(":/new/prefix1/Irkut_logo"));			// Логотип компании.
	rg->setWindowTitle(QString::fromLocal8Bit("Генератор отчётов"));
	rg->resize(300, 100);
	rg->show();

	return report.exec();
}